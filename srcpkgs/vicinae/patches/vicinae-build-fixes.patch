--- a/vicinae/src/services/extension-registry/extension-registry.cpp
+++ b/vicinae/src/services/extension-registry/extension-registry.cpp
@@ -8,7 +8,7 @@
 #include <filesystem>
 #include <qfilesystemwatcher.h>
-#include <qjsonparseerror.h>
+#include <QJsonParseError>
 #include <qlogging.h>
 
 namespace fs = std::filesystem;

--- a/vicinae/src/services/calculator-service/soulver-core/soulver-core.cpp
+++ b/vicinae/src/services/calculator-service/soulver-core/soulver-core.cpp
@@ -5,7 +5,7 @@
 #include <dlfcn.h>
 #include <filesystem>
-#include <qjsonparseerror.h>
+#include <QJsonParseError>
 #include <qlogging.h>
 #include <ranges>
 namespace fs = std::filesystem;

--- a/vicinae/src/ipc-command-handler.cpp
+++ b/vicinae/src/ipc-command-handler.cpp
@@ -33,8 +33,7 @@ proto::ext::daemon::Response *IpcCommandHandler::handleCommand(const proto::ext
 
 void IpcCommandHandler::handleUrl(const QUrl &url) {
   if (!std::ranges::contains(Omnicast::APP_SCHEMES, url.scheme())) {
-    qWarning() << "Unsupported url scheme" << url.scheme() << "Supported schemes are"
-               << Omnicast::APP_SCHEMES;
+    qWarning() << "Unsupported url scheme" << url.scheme() << "Supported schemes are" << Omnicast::APP_SCHEMES[0] << "and" << Omnicast::APP_SCHEMES[1];
     return;
   }
